header {
    background-color: #4c838d;
    border-bottom: 10px solid black;
    padding: 10px 20px;
    display: flex;
    justify-content: space-between ;
    position: fixed;
    z-index: 1000;
    width: 100%;
    top: 0;
    left: 0;
}

header img {
    border-radius: 50%;
    width: 60px;
    height: 60px;
    transition: transform 90ms linear
}

header img:hover {
    transform: scale(2);
}

header .main-subtitle  {
    font-size: 23px;
    margin-left: 20px;
    text-shadow: none;
    padding-top: 8px;
}

/*min-width significa que é desse valor para cima*/

@media screen and (min-width: 1500px) {
    header .open-menu {
        display: none;
    }    

    header nav .close-menu {
        display: none;
    }
}

@media screen and (max-width: 1500px) {
    
    header {
        padding: 2.5vw 1vw;
        align-items: center;
    }

    header .main-subtitle {
        font-size: 2.7vw;
        line-height: 4vw;
        margin-left: 3vw;

    }
    
    header nav {
        position: fixed;
        box-sizing: border-box;
        background-color: #43757e;
        display: flex;
        flex-direction: column;
        width: 70%;
        height: 100%;
        top: 0;
        right: -100%;
        margin-right: 0;
        padding-left: 8vw;
        padding-top: 12vw;
        gap: 3vw;
        transition: transform 0.2s linear;
    }

    header nav::before {
        content: 'Menu';
        font-family: "Press Start 2P", Arial, Helvetica, sans-serif;
        font-size: 9vw;
        font-weight: 400;
        color: #FFF;
        text-align: left;
        margin-bottom: 6vw;
    }

    header nav .close-menu {
       position: absolute;
       top: 2vw;
       right: 0;
    }

    header nav a {
        display: flex;
        margin-right: 7vw;
        line-height: 14vw;
        font-size: 5vw;
        margin-right: 6vw;
        line-height: 14vw;
    }

    header nav .main-button {
        height: 12.5vw;
        width: 52vw;
        padding: 0;
        font-size: 5.5vw;
        line-height: 12.3vw;    
    }
}

nav { 
    text-align: right;
    margin-right: 40px;
}

nav a {
    color: white;
    font-size: 20px;
    font-weight: 500;
    text-decoration: none;
    margin-right: 30px;
    line-height: 60px;
    display: inline-flex;
    align-items: center;
}

a:before {
    content: "";
    background-color: #e4ffd4;
    width: 10px;
    height: 10px;
    margin-right: 10px;
}

nav a:hover {
    color: #edc68e;
}

header .logo-header {
    display: inline-flex;
    align-items: center;
}

header .title {
    color: #FFF;
    font-family: "Press Start 2P", Arial, Helvetica, sans-serif;
    font-size: 15px;
    margin-left: 30px;
    margin-top: 3px;
}

header .title:hover {
    color: #edc68e;
}

footer {
    background-color: black;
    display: flex;
    justify-content: center;
}

footer img {
    margin: 20px;
}

@media screen and (max-width: 1500px) {
    
    footer img {
        margin: 4vw;
        width: 7vw;
        height: 7vw;
    }
}

/* PALETA DE CORES
    .azul clarinho { #e4ffd4 };
    .beje { #ebe7a7 };
    .beje saturado { #edc68e };
    .cinza marrom { #a49e7e };
    .azul escuro { #6e8f85 };
    .azul escuro saturado { #4c838d }

*/


/* ANOTAÇÕES ESTUDO
- NO DISPLAY INLINE NÃO SE PERMITE ALTERAÇÃO DE ALTURA.. POR ISSO MUDAR PARA INLINE BLOCK!
- PARA CENTRALIZAR O TEXTO VERTICALMENTE O LINE HEIGHT DEVE SER IGUAL AO HEIGHT.

COMPORTAMENTOS DE DISPLAY
    #O display diz respeito a como o container do elemento vai se comportar 
    - INLINE
        elementos ficam na mesma linha (como texto / palavras)
        nao permite alteração de width e height
        possui comportamento de palavra
            padrão do <a>
    - BLOCK
        o elemento ocupa toda a linha (largura) sozinho. 
        Portanto, são adds em coluna (um abaixo do outro)
        tem comportamento de bloco / conteiner msm (da pra mudar width e height)
        padrão do <nav> e <header>
    - INLINE-BLOCK
        São blocos/ conteiners menores que ficam em linha 
        (não ocupam sozinhos toda a largura)
        permite ficar na mesma linha
        permite alterar width e height
        tem comportamento de palavra
    - FLEX
        O flex, como o nome sugere, possui uma flexibilidade maior de alterar propriedades
        diversas como alinhamento, espaçamento, posição etc dos elementos (itens) dentro do 
        container com essa atribuição de display. 
PADDING: 
    ATENÇÃO: quando vc coloca um padding com a largura do elemento ja definida,
    o padding não vai diminuir o espaço interno do elemento para criar o espaço. 
    Ele funciona aumentando o espaço total para que o respiro aconteça 
    (de forma default do navegador)

TEXT-ALIGN::
    quando é texto o proprio texto recebe configuração de align
    mas quando é objeto o pai é quem define
*/